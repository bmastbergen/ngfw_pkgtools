#! /bin/bash

usage() {
  echo "Usage: $0 [-s] [-w] -r <repository> -v <version>"
  echo "-s : simulate"
  echo "-w : wipe out target before sync'ing"
  echo "-r : repository to use"
  echo "-v : version (needs to be a full x.y.z)"
  exit 1
}

while getopts "wshr:v:" opt ; do
  case "$opt" in
    s) simulate=1 ;;
    w) WIPE_OUT_TARGET=1 ;;
    r) REPOSITORY=$OPTARG ;;
    v) VERSION=$OPTARG ;;
    h) usage ;;
    \?) usage ;;
  esac
done
shift $(($OPTIND - 1))
if [ ! $# = 0 ] ; then
  usage
fi

[ -z "$REPOSITORY" -o -z "$VERSION" ] && usage && exit 1

#########
# MAIN

# include common variables
. $(dirname $0)/release-constants.sh

copyRemotePkgtools

if [ -z "$simulate" ] ; then
  # wipe out target distribution first
  [ -n "$WIPE_OUT_TARGET" ] && remoteCommand ./remove-packages.sh -r ${REPOSITORY} -d ${VERSION}

  date="$(date)"
  repreproRemote --noskipold update ${VERSION} || exit 1

  repreproRemote export ${VERSION} || exit 1

  changelog_file=$(mktemp "sync-${REPOSITORY}-${VERSION}_$(date -Iminutes)-XXXXXXX.txt")
  diffCommand="python3 ${PKGTOOLS}/changelog.py --log-level info --version $VERSION --tag-type sync --create-tags"
  $diffCommand >| $changelog_file
  mutt -F $MUTT_CONF_FILE -a $changelog_file -s "[Distro sync] $REPOSITORY: $(hostname)/$VERSION pushed to updates.u.c/$VERSION" -- $RECIPIENT $SYNC_RECIPIENT <<EOF
Effective $(date) (started at $date).

Attached is the changelog for this push, generated by running
the following command:

    $diffCommand

--ReleaseMaster ($USER@$(hostname)), version $PKGTOOLS_VERSION
EOF

  /bin/rm -f ${changelog_file}
#  $SSH_COMMAND /etc/init.d/untangle-gpg-agent stop
else
  repreproRemote "checkupdate $VERSION 2>&1 | grep upgraded | sort -u"
  remoteCommand ./remove-packages.sh -r ${REPOSITORY} -d ${VERSION} -T dsc -C premium non-free -s
fi

# remove remote pkgtools
removeRemotePkgtools
